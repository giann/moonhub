local function a()end;local b=setmetatable({leave=a},{__index=function()error("Gamestate not initialized. Use Gamestate.switch()")end})local c={b}local d=setmetatable({},{__mode="k"})local e=true;local f={}function f.new(g)return g or{}end;local function h(i,j,...)local k=c[#c](d[j]or j.init or a)(j)d[j]=a;c[#c+i]=j;e=true;return(j.enter or a)(j,k,...)end;function f.switch(j,...)assert(j,"Missing argument: Gamestate to switch to")assert(j~=f,"Can't call switch with colon operator")(c[#c].leave or a)(c[#c])return h(0,j,...)end;function f.push(j,...)assert(j,"Missing argument: Gamestate to switch to")assert(j~=f,"Can't call push with colon operator")return h(1,j,...)end;function f.pop(...)assert(#c>1,"No more states to pop!")local k,j=c[#c],c[#c-1]c[#c]=nil(k.leave or a)(k)e=true;return(j.resume or a)(j,k,...)end;function f.current()return c[#c]end;local l={'draw','errhand','update'}for m in pairs(love.handlers)do l[#l+1]=m end;function f.registerEvents(n)local o={}n=n or l;for p,q in ipairs(n)do o[q]=love[q]or a;love[q]=function(...)o[q](...)return f[q](...)end end end;setmetatable(f,{__index=function(p,r)if not e or r=='update'then e=false;return function(...)return(c[#c][r]or a)(c[#c],...)end end;return a end})return f
