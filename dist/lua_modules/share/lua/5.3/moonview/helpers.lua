local a=js.global;local b=a.document;local c=function(d)return b:querySelector(d)end;local e=function(d)local f=b:querySelectorAll(d)local g={}for h in js.of(f)do table.insert(g,h)end;return g end;local i=function(...)local j=coroutine.running()assert(j,"fetch must be called inside a running coroutine")local k={...}for l=1,#k do local m=js.global:fetch(k[l])m["then"](m,function(n,o)local p=o:text()p["then"](p,function(n,q)coroutine.resume(j,l,q)end)end)end;local r={}for l=1,#k do local s,t=coroutine.yield()r[s]=t end;return table.unpack(r)end;local u=function(...)local j=coroutine.running()assert(j,"fetchj must be called inside a running coroutine")local k={...}for l=1,#k do local m=js.global:fetch(k[l])m["then"](m,function(n,o)local v=o:json()v["then"](v,function(n,w)coroutine.resume(j,l,w)end)end)end;local r={}for l=1,#k do local s,t=coroutine.yield()r[s]=t end;return table.unpack(r)end;local x=function(...)local j=coroutine.running()assert(j,"require must be called inside a running coroutine")local y={...}local z=table.pack(i(j,table.unpack(y)))for l=1,#z do local A=z[l]z[l]=load(A)end;return table.unpack(z)end;return{q=c,qall=e,fetch=i,fetchj=u}
